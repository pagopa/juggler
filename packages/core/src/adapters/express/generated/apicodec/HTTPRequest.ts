/**
 * Do not edit this file it is auto-generated by io-utils / gen-api-models.
 * See https://github.com/pagopa/io-utils
 */
/* eslint-disable  */

import * as t from "io-ts";
import { enumType } from "@pagopa/ts-commons/lib/types";

export enum MethodEnum {
  "delete" = "delete",

  "get" = "get",

  "head" = "head",

  "options" = "options",

  "patch" = "patch",

  "post" = "post",

  "put" = "put",

  "trace" = "trace"
}

// additional attributes

export const HTTPRequestHeaders = t.record(
  t.string,

  t.string,

  "HTTPRequestHeaders"
);

export type HTTPRequestHeaders = t.TypeOf<typeof HTTPRequestHeaders>;

// additional attributes

export const HTTPRequestBody = t.record(t.string, t.any, "HTTPRequestBody");

export type HTTPRequestBody = t.TypeOf<typeof HTTPRequestBody>;

// required attributes
const HTTPRequestR = t.interface({
  method: enumType<MethodEnum>(MethodEnum, "method"),

  url: t.string,

  headers: HTTPRequestHeaders
});

// optional attributes
const HTTPRequestO = t.partial({
  body: HTTPRequestBody
});

export const HTTPRequest = t.intersection(
  [HTTPRequestR, HTTPRequestO],
  "HTTPRequest"
);

export type HTTPRequest = t.TypeOf<typeof HTTPRequest>;
